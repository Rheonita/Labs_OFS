<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>